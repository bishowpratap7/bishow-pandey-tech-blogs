{"id":302,"date":"2023-06-22T20:26:04","date_gmt":"2023-06-22T20:26:04","guid":{"rendered":"https:\/\/javapan.com\/?p=302"},"modified":"2024-02-10T16:02:35","modified_gmt":"2024-02-10T16:02:35","slug":"how-to-encrypt-phi-or-pii-data-on-response-body-from-handlerinterceptor-in-springboot","status":"publish","type":"post","link":"https:\/\/javapan.com\/how-to-encrypt-phi-or-pii-data-on-response-body-from-handlerinterceptor-in-springboot\/","title":{"rendered":"How to encrypt PHI or PII   or PCI data on Response Body from HandlerInterceptor in SpringBoot ?"},"content":{"rendered":"\n<p><strong>HandlerInterceptor<\/strong> gets called before the appropriate HandlerAdapter triggers the execution of the handler itself. This mechanism can be used for a large field of preprocessing aspects, e.g. for authorization checks, or common handler behavior like locale or theme changes. Its main purpose is to allow for factoring out repetitive handler code.<\/p>\n\n\n\n<p>There are many ways to encrypt PHI or PII or PCI data but one of the easiest and global way to do is on postHandle method from HandlerInterceptor which only changes the part of the response body. <\/p>\n\n\n\n<p>This is less invasive as we are only doing it on the response body without changing the whole codebase or at JPAs entity level. If client needs the decrypted PHI or PII data, they can be provided with the decrypt key separately. Then client can view that PHI or PII data securely on their end. Find below the code snippets to help you achieve this.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code lang=\"java\" class=\"language-java\">    @Override\n    public void postHandle(HttpServletRequest request, HttpServletResponse response, Object handler,\n                           ModelAndView modelAndView) throws NoSuchFieldException, IllegalAccessException, IOException {\n\n        \/\/Using Reflect Utils to find the JSON based on content Field of ContentCachingResponseWrapper class.\n        Field privateField = ContentCachingResponseWrapper.class.getDeclaredField(\"content\");\n        privateField.setAccessible(true);\n\n        \/\/Using ContentCachingResponseWrapper that caches all content written to the output stream and writer, and allows this content to be retrieved via a byte array.\n        ContentCachingResponseWrapper contentCachingResponseWrapper = (ContentCachingResponseWrapper) response;\n\n        \/\/Returns the value of the field represented by this Field, on the contentCachingResponseWrapper object.\n        FastByteArrayOutputStream fastByteArrayOutputStream = (FastByteArrayOutputStream) privateField.get(contentCachingResponseWrapper);\n        InputStream inputStream = fastByteArrayOutputStream.getInputStream();\n\n        \/\/Get Original Response from buffered stream\n        String originalJsonResponse = StringUtils.EMPTY;\n\n        try {  \/\/Best to use try with resource\n            originalJsonResponse = new BufferedReader(\n                    new InputStreamReader(inputStream, StandardCharsets.UTF_8))\n                    .lines()\n                    .collect(Collectors.joining(\"\\n\"));\n\n        } catch (Exception e) {\n            \/\/Do your thingy.\n        } finally {\n            if (fastByteArrayOutputStream != null) {\n                fastByteArrayOutputStream.close();\n\n            }\n\n            if (inputStream != null) {\n                inputStream.close();\n\n            }\n\n        }\n\n\n        \/\/Now check the key of the original JSON for any PII\n        if (originalJsonResponse.contains(\"some_PII_data_key\")) {\n\n            \/\/ObjectMapper provides functionality for reading and writing JSON.\n            ObjectMapper mapper = new ObjectMapper();\n            mapper.configure(DeserializationFeature.ACCEPT_SINGLE_VALUE_AS_ARRAY, true);\n            List&lt;Map&lt;String, Object&gt;&gt; mapList = mapper.readValue(originalJsonResponse, new TypeReference&lt;&gt;() {\n            });\n\n\n            \/\/ Create a new LinkedHashMap to actually check for key and update its value\n            List&lt;LinkedHashMap&lt;String, Object&gt;&gt; listOfLinkedHashMap = new ArrayList&lt;&gt;();\n\n            mapList.forEach(stringObjectMap -&gt; listOfLinkedHashMap.add((LinkedHashMap) stringObjectMap));\n\n            listOfLinkedHashMap.forEach(linkedHashMap -&gt; listOfLinkedHashMap.forEach(stringObjectLinkedHashMap -&gt; stringObjectLinkedHashMap.entrySet().forEach(stringObjectEntry -&gt; {\n\n                \/\/Just an example here.If key is dob or any PII update it based on your need.\n                if (stringObjectEntry.getKey().equals(\"dob\")) {\n                    \/\/Do your thing. Mask it, Encrypt it, null it etc.\n                    stringObjectEntry.setValue(\"MASKED\");\n                }\n\n            })));\n\n            \/\/Clears any data that exists in the buffer as well as the status code and headers. If the response has been committed, this method throws an IllegalStateException.\n            response.reset();\n\n            \/\/Now save the updated JSON into the response writer.\n            response.getWriter().write(mapper.writerWithDefaultPrettyPrinter().writeValueAsString(listOfLinkedHashMap));\n        }\n\n    }<\/code><\/pre>\n\n\n\n<p><\/p>\n","protected":false},"excerpt":{"rendered":"<p>HandlerInterceptor gets called before the appropriate HandlerAdapter triggers the execution of the handler itself. This mechanism can be used for a large field of preprocessing aspects, e.g. for authorization checks, or common handler behavior like locale or theme changes. Its main purpose is to allow for factoring out repetitive handler code. There are many ways [&hellip;]<\/p>\n","protected":false},"author":1,"featured_media":309,"comment_status":"open","ping_status":"closed","sticky":false,"template":"","format":"standard","meta":{"_coblocks_attr":"","_coblocks_dimensions":"","_coblocks_responsive_height":"","_coblocks_accordion_ie_support":"","footnotes":""},"categories":[],"tags":[25,24,23],"class_list":["post-302","post","type-post","status-publish","format-standard","has-post-thumbnail","hentry","tag-interceptor","tag-phi","tag-pii"],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v23.9 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>How to encrypt PHI or PII  or PCI data on Response Body from HandlerInterceptor in SpringBoot ? - JAVAPAN - Unlock Your Brilliance, Share Your Knowledge! \ud83d\ude80 Post Your Articles For Free.<\/title>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/javapan.com\/how-to-encrypt-phi-or-pii-data-on-response-body-from-handlerinterceptor-in-springboot\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"How to encrypt PHI or PII  or PCI data on Response Body from HandlerInterceptor in SpringBoot ? - JAVAPAN - Unlock Your Brilliance, Share Your Knowledge! \ud83d\ude80 Post Your Articles For Free.\" \/>\n<meta property=\"og:description\" content=\"HandlerInterceptor gets called before the appropriate HandlerAdapter triggers the execution of the handler itself. This mechanism can be used for a large field of preprocessing aspects, e.g. for authorization checks, or common handler behavior like locale or theme changes. Its main purpose is to allow for factoring out repetitive handler code. There are many ways [&hellip;]\" \/>\n<meta property=\"og:url\" content=\"https:\/\/javapan.com\/how-to-encrypt-phi-or-pii-data-on-response-body-from-handlerinterceptor-in-springboot\/\" \/>\n<meta property=\"og:site_name\" content=\"JAVAPAN - Unlock Your Brilliance, Share Your Knowledge! \ud83d\ude80 Post Your Articles For Free.\" \/>\n<meta property=\"article:published_time\" content=\"2023-06-22T20:26:04+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2024-02-10T16:02:35+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/javapan.com\/wp-content\/uploads\/2023\/06\/Capture.jpg\" \/>\n\t<meta property=\"og:image:width\" content=\"270\" \/>\n\t<meta property=\"og:image:height\" content=\"58\" \/>\n\t<meta property=\"og:image:type\" content=\"image\/jpeg\" \/>\n<meta name=\"author\" content=\"Bishow Pandey\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"Bishow Pandey\" \/>\n\t<meta name=\"twitter:label2\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"1 minute\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/javapan.com\/how-to-encrypt-phi-or-pii-data-on-response-body-from-handlerinterceptor-in-springboot\/\",\"url\":\"https:\/\/javapan.com\/how-to-encrypt-phi-or-pii-data-on-response-body-from-handlerinterceptor-in-springboot\/\",\"name\":\"How to encrypt PHI or PII or PCI data on Response Body from HandlerInterceptor in SpringBoot ? - JAVAPAN - Unlock Your Brilliance, Share Your Knowledge! \ud83d\ude80 Post Your Articles For Free.\",\"isPartOf\":{\"@id\":\"https:\/\/javapan.com\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/javapan.com\/how-to-encrypt-phi-or-pii-data-on-response-body-from-handlerinterceptor-in-springboot\/#primaryimage\"},\"image\":{\"@id\":\"https:\/\/javapan.com\/how-to-encrypt-phi-or-pii-data-on-response-body-from-handlerinterceptor-in-springboot\/#primaryimage\"},\"thumbnailUrl\":\"https:\/\/javapan.com\/wp-content\/uploads\/2023\/06\/Capture.jpg\",\"datePublished\":\"2023-06-22T20:26:04+00:00\",\"dateModified\":\"2024-02-10T16:02:35+00:00\",\"author\":{\"@id\":\"https:\/\/javapan.com\/#\/schema\/person\/a77752ba68fc33df883be2ffb8e8285a\"},\"breadcrumb\":{\"@id\":\"https:\/\/javapan.com\/how-to-encrypt-phi-or-pii-data-on-response-body-from-handlerinterceptor-in-springboot\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/javapan.com\/how-to-encrypt-phi-or-pii-data-on-response-body-from-handlerinterceptor-in-springboot\/\"]}]},{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/javapan.com\/how-to-encrypt-phi-or-pii-data-on-response-body-from-handlerinterceptor-in-springboot\/#primaryimage\",\"url\":\"https:\/\/javapan.com\/wp-content\/uploads\/2023\/06\/Capture.jpg\",\"contentUrl\":\"https:\/\/javapan.com\/wp-content\/uploads\/2023\/06\/Capture.jpg\",\"width\":270,\"height\":58},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/javapan.com\/how-to-encrypt-phi-or-pii-data-on-response-body-from-handlerinterceptor-in-springboot\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/javapan.com\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"How to encrypt PHI or PII or PCI data on Response Body from HandlerInterceptor in SpringBoot ?\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/javapan.com\/#website\",\"url\":\"https:\/\/javapan.com\/\",\"name\":\"JAVAPAN - Unlock Your Brilliance, Share Your Knowledge! \ud83d\ude80 Post Your Articles For Free.\",\"description\":\"Solving Technology Challenges\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/javapan.com\/?s={search_term_string}\"},\"query-input\":{\"@type\":\"PropertyValueSpecification\",\"valueRequired\":true,\"valueName\":\"search_term_string\"}}],\"inLanguage\":\"en-US\"},{\"@type\":\"Person\",\"@id\":\"https:\/\/javapan.com\/#\/schema\/person\/a77752ba68fc33df883be2ffb8e8285a\",\"name\":\"Bishow Pandey\",\"image\":{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/javapan.com\/#\/schema\/person\/image\/\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/2ee0db8821f0777e76adf2f4d0c20bb1?s=96&d=wavatar&r=g\",\"contentUrl\":\"https:\/\/secure.gravatar.com\/avatar\/2ee0db8821f0777e76adf2f4d0c20bb1?s=96&d=wavatar&r=g\",\"caption\":\"Bishow Pandey\"},\"sameAs\":[\"https:\/\/javapan.com\"],\"url\":\"https:\/\/javapan.com\/author\/bishowpratap7\/\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"How to encrypt PHI or PII  or PCI data on Response Body from HandlerInterceptor in SpringBoot ? - JAVAPAN - Unlock Your Brilliance, Share Your Knowledge! \ud83d\ude80 Post Your Articles For Free.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/javapan.com\/how-to-encrypt-phi-or-pii-data-on-response-body-from-handlerinterceptor-in-springboot\/","og_locale":"en_US","og_type":"article","og_title":"How to encrypt PHI or PII  or PCI data on Response Body from HandlerInterceptor in SpringBoot ? - JAVAPAN - Unlock Your Brilliance, Share Your Knowledge! \ud83d\ude80 Post Your Articles For Free.","og_description":"HandlerInterceptor gets called before the appropriate HandlerAdapter triggers the execution of the handler itself. This mechanism can be used for a large field of preprocessing aspects, e.g. for authorization checks, or common handler behavior like locale or theme changes. Its main purpose is to allow for factoring out repetitive handler code. There are many ways [&hellip;]","og_url":"https:\/\/javapan.com\/how-to-encrypt-phi-or-pii-data-on-response-body-from-handlerinterceptor-in-springboot\/","og_site_name":"JAVAPAN - Unlock Your Brilliance, Share Your Knowledge! \ud83d\ude80 Post Your Articles For Free.","article_published_time":"2023-06-22T20:26:04+00:00","article_modified_time":"2024-02-10T16:02:35+00:00","og_image":[{"width":270,"height":58,"url":"https:\/\/javapan.com\/wp-content\/uploads\/2023\/06\/Capture.jpg","type":"image\/jpeg"}],"author":"Bishow Pandey","twitter_card":"summary_large_image","twitter_misc":{"Written by":"Bishow Pandey","Est. reading time":"1 minute"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/javapan.com\/how-to-encrypt-phi-or-pii-data-on-response-body-from-handlerinterceptor-in-springboot\/","url":"https:\/\/javapan.com\/how-to-encrypt-phi-or-pii-data-on-response-body-from-handlerinterceptor-in-springboot\/","name":"How to encrypt PHI or PII or PCI data on Response Body from HandlerInterceptor in SpringBoot ? - JAVAPAN - Unlock Your Brilliance, Share Your Knowledge! \ud83d\ude80 Post Your Articles For Free.","isPartOf":{"@id":"https:\/\/javapan.com\/#website"},"primaryImageOfPage":{"@id":"https:\/\/javapan.com\/how-to-encrypt-phi-or-pii-data-on-response-body-from-handlerinterceptor-in-springboot\/#primaryimage"},"image":{"@id":"https:\/\/javapan.com\/how-to-encrypt-phi-or-pii-data-on-response-body-from-handlerinterceptor-in-springboot\/#primaryimage"},"thumbnailUrl":"https:\/\/javapan.com\/wp-content\/uploads\/2023\/06\/Capture.jpg","datePublished":"2023-06-22T20:26:04+00:00","dateModified":"2024-02-10T16:02:35+00:00","author":{"@id":"https:\/\/javapan.com\/#\/schema\/person\/a77752ba68fc33df883be2ffb8e8285a"},"breadcrumb":{"@id":"https:\/\/javapan.com\/how-to-encrypt-phi-or-pii-data-on-response-body-from-handlerinterceptor-in-springboot\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/javapan.com\/how-to-encrypt-phi-or-pii-data-on-response-body-from-handlerinterceptor-in-springboot\/"]}]},{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/javapan.com\/how-to-encrypt-phi-or-pii-data-on-response-body-from-handlerinterceptor-in-springboot\/#primaryimage","url":"https:\/\/javapan.com\/wp-content\/uploads\/2023\/06\/Capture.jpg","contentUrl":"https:\/\/javapan.com\/wp-content\/uploads\/2023\/06\/Capture.jpg","width":270,"height":58},{"@type":"BreadcrumbList","@id":"https:\/\/javapan.com\/how-to-encrypt-phi-or-pii-data-on-response-body-from-handlerinterceptor-in-springboot\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/javapan.com\/"},{"@type":"ListItem","position":2,"name":"How to encrypt PHI or PII or PCI data on Response Body from HandlerInterceptor in SpringBoot ?"}]},{"@type":"WebSite","@id":"https:\/\/javapan.com\/#website","url":"https:\/\/javapan.com\/","name":"JAVAPAN - Unlock Your Brilliance, Share Your Knowledge! \ud83d\ude80 Post Your Articles For Free.","description":"Solving Technology Challenges","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/javapan.com\/?s={search_term_string}"},"query-input":{"@type":"PropertyValueSpecification","valueRequired":true,"valueName":"search_term_string"}}],"inLanguage":"en-US"},{"@type":"Person","@id":"https:\/\/javapan.com\/#\/schema\/person\/a77752ba68fc33df883be2ffb8e8285a","name":"Bishow Pandey","image":{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/javapan.com\/#\/schema\/person\/image\/","url":"https:\/\/secure.gravatar.com\/avatar\/2ee0db8821f0777e76adf2f4d0c20bb1?s=96&d=wavatar&r=g","contentUrl":"https:\/\/secure.gravatar.com\/avatar\/2ee0db8821f0777e76adf2f4d0c20bb1?s=96&d=wavatar&r=g","caption":"Bishow Pandey"},"sameAs":["https:\/\/javapan.com"],"url":"https:\/\/javapan.com\/author\/bishowpratap7\/"}]}},"_links":{"self":[{"href":"https:\/\/javapan.com\/wp-json\/wp\/v2\/posts\/302"}],"collection":[{"href":"https:\/\/javapan.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/javapan.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/javapan.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/javapan.com\/wp-json\/wp\/v2\/comments?post=302"}],"version-history":[{"count":12,"href":"https:\/\/javapan.com\/wp-json\/wp\/v2\/posts\/302\/revisions"}],"predecessor-version":[{"id":475,"href":"https:\/\/javapan.com\/wp-json\/wp\/v2\/posts\/302\/revisions\/475"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/javapan.com\/wp-json\/wp\/v2\/media\/309"}],"wp:attachment":[{"href":"https:\/\/javapan.com\/wp-json\/wp\/v2\/media?parent=302"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/javapan.com\/wp-json\/wp\/v2\/categories?post=302"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/javapan.com\/wp-json\/wp\/v2\/tags?post=302"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}