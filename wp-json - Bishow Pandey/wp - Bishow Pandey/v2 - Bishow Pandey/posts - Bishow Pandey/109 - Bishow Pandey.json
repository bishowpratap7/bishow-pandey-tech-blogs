{"id":109,"date":"2023-06-15T14:03:22","date_gmt":"2023-06-15T14:03:22","guid":{"rendered":"https:\/\/javapan.com\/?p=109"},"modified":"2024-02-10T16:33:32","modified_gmt":"2024-02-10T16:33:32","slug":"how-to-use-nimbus-jose-along-with-jwt-in-spring-framework","status":"publish","type":"post","link":"https:\/\/javapan.com\/how-to-use-nimbus-jose-along-with-jwt-in-spring-framework\/","title":{"rendered":"How to use Nimbus JOSE along with JWT in Spring framework ?"},"content":{"rendered":"\n<p>JSON Web Token (JWT) is an open standard that defines a compact and self-contained way for securely transmitting information between parties as a JSON object.<br>JWT is easy to identify and is separated by dots .<br>Example Format : iiiiiiiiiiiiii.jjjjjjjjjjjj.kkkkkkk<br>Header = iiiiiiiiiiii<br>Payload = jjjjjjjjjjj<br>Signature = kkkkkkk<br>Brief use of JSON Web Tokens : Authorization and Information Exchange.<br>Java Library: This library implements the Javascript Object Signing and Encryption (JOSE) and JSON Web Token (JWT) specs.<br>Supports all standard signature (JWS) and encryption (JWE) algorithms. Supports Bitcoin and Ethereum related encryption if your business logic needs to implement that.<br>So with this brief introduction, now let\u2019s go into the coding part.<br>I have shared three screen shots (1st one is the POST call to generate JWT and second one is for GET call to get the business logic) and have pasted the Java Code as well (3rd screenshot is this project structure). You can copy and use it or modify it however it helps you the most.<br>Note: Not using @Autowired here but using constructor injection which is the recommended way.<br><br>Find below the Java codes in this Nimbus Jose Spring Boot Application :<\/p>\n\n\n\n<pre class=\"wp-block-code has-base-color has-contrast-background-color has-text-color has-background\"><code lang=\"java\" class=\"language-java\">package com.example.demo.auth.security;\nimport org.springframework.security.core.AuthenticationException;\nimport org.springframework.security.web.AuthenticationEntryPoint;\nimport org.springframework.stereotype.Component;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport java.io.IOException;\n@Component\npublic class CustomJoseJwtEntryPoint implements AuthenticationEntryPoint {\n\/\/Make sure to implement Serializable Interface if sending data over Network. Not implementing here as this is local demo\n@Override\npublic void commence(HttpServletRequest request, HttpServletResponse response,\nAuthenticationException authException) throws IOException {\nresponse.sendError(HttpServletResponse.SC_UNAUTHORIZED, \" 401: UNAUTHORIZED REQUEST \");\n}\n}\npackage com.example.demo.auth.security;\nimport com.example.demo.user.CustomSpringUserDetailsImpl;\nimport com.example.demo.util.JoseJwtClaimGeneratorUtil;\nimport com.nimbusds.jose.JOSEException;\nimport org.springframework.security.authentication.UsernamePasswordAuthenticationToken;\nimport org.springframework.security.core.context.SecurityContextHolder;\nimport org.springframework.security.core.userdetails.UserDetails;\nimport org.springframework.security.web.authentication.WebAuthenticationDetailsSource;\nimport org.springframework.stereotype.Component;\nimport org.springframework.util.StringUtils;\nimport org.springframework.web.filter.OncePerRequestFilter;\nimport javax.servlet.FilterChain;\nimport javax.servlet.ServletException;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport java.io.IOException;\nimport java.text.ParseException;\nimport java.util.HashMap;\nimport java.util.Map;\n@Component\n\/\/Using OncePerRequestFilter to guarantee a single execution per request dispatch, on any servlet container.\npublic class RequestResponseJwtChainFilter extends OncePerRequestFilter {\nprivate static final String AUTHORIZATION = \"Authorization\";\nprivate static final String BEARER_TOKEN = \"Bearer \";\nprivate static final String TOKEN = \"token\";\nprivate static final String USERNAME = \"username\";\nprivate final CustomSpringUserDetailsImpl customSpringUserDetailsImpl;\nprivate final JoseJwtClaimGeneratorUtil joseJwtClaimGeneratorUtil;\npublic RequestResponseJwtChainFilter(CustomSpringUserDetailsImpl customSpringUserDetailsImpl, JoseJwtClaimGeneratorUtil joseJwtClaimGeneratorUtil) {\nthis.customSpringUserDetailsImpl = customSpringUserDetailsImpl;\nthis.joseJwtClaimGeneratorUtil = joseJwtClaimGeneratorUtil;\n}\n@Override\nprotected void doFilterInternal(HttpServletRequest request, HttpServletResponse response, FilterChain chain)\nthrows ServletException, IOException {\ntry {\nfinal String requestTokenHeader = request.getHeader(AUTHORIZATION);\n\/\/This will be used once we have token.\nString jwtToken = getTokenWithBearer(requestTokenHeader).get(TOKEN);\nString username = getTokenWithBearer(requestTokenHeader).get(USERNAME);\n\/\/ Once we get the token then only validate security context for currently authenticated principal, or an authentication request token.\nif (SecurityContextHolder.getContext().getAuthentication() == null &amp;&amp; !StringUtils.isEmpty(jwtToken)) {\nUserDetails employeeDetails = customSpringUserDetailsImpl.loadUserByUsername(username);\n\/\/Validate token and employee details.\nif (joseJwtClaimGeneratorUtil.validateTokenTimestamp(jwtToken, employeeDetails)) {\nUsernamePasswordAuthenticationToken usernamePasswordAuthenticationToken = new UsernamePasswordAuthenticationToken(\nemployeeDetails, null, employeeDetails.getAuthorities());\nusernamePasswordAuthenticationToken\n.setDetails(new WebAuthenticationDetailsSource().buildDetails(request));\n\/\/If no exception till here. User is validated add the authenticated principle.\nSecurityContextHolder.getContext().setAuthentication(usernamePasswordAuthenticationToken);\n}\n}\n} catch (ParseException e) {\nthrow new ServletException(\"ServletException caused by : Payload of JWS object not being a valid JSON object\", e.getCause());\n} catch (JOSEException e) {\nthrow new ServletException(\"JOSE exception for token: \", e.getCause());\n}\nchain.doFilter(request, response);\n}\nprivate Map getTokenWithBearer(String requestTokenHeader) throws ServletException, JOSEException {\nMap tokenWithUsername = new HashMap&lt;&gt;();\nif (requestTokenHeader != null &amp;&amp; requestTokenHeader.startsWith(BEARER_TOKEN)) {\ntry {\ntokenWithUsername.put(TOKEN, requestTokenHeader.substring(BEARER_TOKEN.length()));\ntokenWithUsername.put(USERNAME, joseJwtClaimGeneratorUtil.getUsernameFromToken(requestTokenHeader.substring(BEARER_TOKEN.length())));\n} catch (IllegalArgumentException | ParseException e) {\nthrow new ServletException(e.getMessage());\n}\n}\nreturn tokenWithUsername;\n}\n}\npackage com.example.demo.auth.security;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.beans.factory.annotation.Qualifier;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.security.authentication.AuthenticationManager;\nimport org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;\nimport org.springframework.security.config.annotation.method.configuration.EnableGlobalMethodSecurity;\nimport org.springframework.security.config.annotation.web.builders.HttpSecurity;\nimport org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;\nimport org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;\nimport org.springframework.security.config.http.SessionCreationPolicy;\nimport org.springframework.security.core.userdetails.UserDetailsService;\nimport org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;\nimport org.springframework.security.crypto.password.PasswordEncoder;\nimport org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter;\n@Configuration\n@EnableWebSecurity\n@EnableGlobalMethodSecurity(prePostEnabled = true)\npublic class WebSecurityConfig extends WebSecurityConfigurerAdapter {\nprivate final CustomJoseJwtEntryPoint customJoseJwtEntryPoint;\nprivate final UserDetailsService jwtUserDetailsService;\nprivate final RequestResponseJwtChainFilter requestResponseJwtChainFilter;\npublic WebSecurityConfig(CustomJoseJwtEntryPoint customJoseJwtEntryPoint, @Qualifier(\"customSpringUserDetailsImpl\") UserDetailsService jwtUserDetailsService, RequestResponseJwtChainFilter requestResponseJwtChainFilter) {\nthis.customJoseJwtEntryPoint = customJoseJwtEntryPoint;\nthis.jwtUserDetailsService = jwtUserDetailsService;\nthis.requestResponseJwtChainFilter = requestResponseJwtChainFilter;\n}\n@Autowired\npublic void configureGlobal(AuthenticationManagerBuilder auth) throws Exception {\n\/\/ Can use other Encoders but using BCryptPasswordEncoder here\nauth.userDetailsService(jwtUserDetailsService).passwordEncoder(passwordEncoder());\n}\n@Bean\n@Override\npublic AuthenticationManager authenticationManagerBean() throws Exception {\nreturn super.authenticationManagerBean();\n}\n@Bean\npublic PasswordEncoder passwordEncoder() {\nreturn new BCryptPasswordEncoder();\n}\n@Override\nprotected void configure(HttpSecurity httpSecurity) throws Exception {\nhttpSecurity.csrf().disable()\n.authorizeRequests().antMatchers(\"\/authenticate\/token\").permitAll().\nanyRequest().authenticated().and().\nexceptionHandling().authenticationEntryPoint(customJoseJwtEntryPoint).and().sessionManagement()\n.sessionCreationPolicy(SessionCreationPolicy.STATELESS);\nhttpSecurity.addFilterBefore(requestResponseJwtChainFilter, UsernamePasswordAuthenticationFilter.class);\n}\n}\npackage com.example.demo.controller;\nimport com.example.demo.nimbus.jose.NimbusJoseJwtRequest;\nimport com.example.demo.nimbus.jose.NimbusJoseJwtResponse;\nimport com.example.demo.user.CustomSpringUserDetailsImpl;\nimport com.example.demo.util.JoseJwtClaimGeneratorUtil;\nimport org.springframework.http.ResponseEntity;\nimport org.springframework.security.authentication.AuthenticationManager;\nimport org.springframework.security.authentication.BadCredentialsException;\nimport org.springframework.security.authentication.DisabledException;\nimport org.springframework.security.authentication.UsernamePasswordAuthenticationToken;\nimport org.springframework.security.core.userdetails.UserDetails;\nimport org.springframework.web.bind.annotation.RequestBody;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RequestMethod;\nimport org.springframework.web.bind.annotation.RestController;\nimport java.time.LocalDateTime;\n@RestController\npublic class InitialJwtAuthenticationController {\nprivate final AuthenticationManager authenticationManager;\nprivate final JoseJwtClaimGeneratorUtil joseJwtClaimGeneratorUtil;\nprivate final CustomSpringUserDetailsImpl userDetailsService;\npublic InitialJwtAuthenticationController(AuthenticationManager authenticationManager, JoseJwtClaimGeneratorUtil joseJwtClaimGeneratorUtil, CustomSpringUserDetailsImpl userDetailsService) {\nthis.authenticationManager = authenticationManager;\nthis.joseJwtClaimGeneratorUtil = joseJwtClaimGeneratorUtil;\nthis.userDetailsService = userDetailsService;\n}\n@RequestMapping(value = \"\/authenticate\/token\", method = RequestMethod.POST)\npublic ResponseEntity createAuthenticationToken(@RequestBody NimbusJoseJwtRequest authenticationRequest) throws Exception {\nauthenticate(authenticationRequest.getUsername(), authenticationRequest.getPassword());\nfinal UserDetails employeeDetails = userDetailsService\n.loadUserByUsername(authenticationRequest.getUsername());\nfinal String token = joseJwtClaimGeneratorUtil.generateJwtToken(employeeDetails);\nreturn ResponseEntity.ok(new NimbusJoseJwtResponse(token, LocalDateTime.now().plusMinutes(1).toString()));\n}\nprivate void authenticate(String username, String password) throws Exception {\ntry {\nauthenticationManager.authenticate(new UsernamePasswordAuthenticationToken(username, password));\n} catch (DisabledException e) {\nthrow new Exception(\"USER_DISABLED\", e);\n} catch (BadCredentialsException e) {\nthrow new Exception(\"INVALID_CREDENTIALS\", e);\n}\n}\n}\npackage com.example.demo.controller;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RestController;\nimport java.util.HashMap;\nimport java.util.Map;\n@RestController\npublic class NimbusJoseJwtController {\n@RequestMapping(\"\/company\/employees-information\")\nMap getResponse() {\nreturn returnEmployeeInfo();\n}\nprivate Map returnEmployeeInfo() {\nMap dummyEmployeesInfo = new HashMap&lt;&gt;();\ndummyEmployeesInfo.put(\"Mira\", \"Manager\");\ndummyEmployeesInfo.put(\"Sam\", \"Senior Dev\");\ndummyEmployeesInfo.put(\"John\", \"Systems Engineer\");\ndummyEmployeesInfo.put(\"Abraham\", \"HR Administrator\");\nreturn dummyEmployeesInfo;\n}\n}\npackage com.example.demo.nimbus.jose;\npublic class NimbusJoseJwtRequest {\nprivate String username;\nprivate String password;\npublic NimbusJoseJwtRequest() {\n}\npublic NimbusJoseJwtRequest(String username, String password) {\nthis.setUsername(username);\nthis.setPassword(password);\n}\npublic String getUsername() {\nreturn this.username;\n}\npublic void setUsername(String username) {\nthis.username = username;\n}\npublic String getPassword() {\nreturn this.password;\n}\npublic void setPassword(String password) {\nthis.password = password;\n}\n}\npackage com.example.demo.nimbus.jose;\npublic class NimbusJoseJwtResponse {\nprivate final String yourToken;\nprivate final String expires;\npublic NimbusJoseJwtResponse(String yourToken, String expires) {\nthis.yourToken = yourToken;\nthis.expires = expires;\n}\npublic String getYourToken() {\nreturn yourToken;\n}\npublic String getExpires() {\nreturn \"Expires after: \" + expires;\n}\n}\npackage com.example.demo.user;\nimport org.springframework.security.core.userdetails.User;\nimport org.springframework.security.core.userdetails.UserDetails;\nimport org.springframework.security.core.userdetails.UserDetailsService;\nimport org.springframework.security.core.userdetails.UsernameNotFoundException;\nimport org.springframework.stereotype.Service;\nimport java.util.ArrayList;\nimport java.util.List;\n@Service\npublic class CustomSpringUserDetailsImpl implements UserDetailsService {\n@Override\npublic UserDetails loadUserByUsername(String username) throws UsernameNotFoundException {\nUserDetails employeeDetails;\nfor (User u : getEmployeesList()) {\nif (u.getUsername().equalsIgnoreCase(username)) {\nif (u.isAccountNonExpired() &amp;&amp; u.isAccountNonLocked()) {\nif (u.getUsername().equalsIgnoreCase(username)) {\nemployeeDetails = new User(u.getUsername(), u.getPassword(),\nnew ArrayList&lt;&gt;());\nreturn employeeDetails;\n} else {\nthrow new UsernameNotFoundException(\"Employee not found with username: \" + u);\n}\n}\n}\n}\nreturn null;\n}\n\/\/Some dummy company with dummy employees stored at some dummy database.\nList getEmployeesList() {\nList userList = new ArrayList&lt;&gt;();\nUser user1 = new User(\"Mira\", \"$2a$10$e59rGaFvpijWXLh03j0aZOzBYQNrIRIjlB8sGwLvBL35fecblsW1m\", true, true,\ntrue, true, new ArrayList&lt;&gt;());\nUser user2 = new User(\"Sam\", \"$2a$10$e59rGaFvpijWXLh03j0aZOzBYQNrIRIjlB8sGwLvBL35fecblsW1m\", false, false,\nfalse, false, new ArrayList&lt;&gt;());\nUser user3 = new User(\"John\", \"$2a$10$e59rGaFvpijWXLh03j0aZOzBYQNrIRIjlB8sGwLvBL35fecblsW1m\", new ArrayList&lt;&gt;());\nuserList.add(user1);\nuserList.add(user2);\nuserList.add(user3);\nreturn userList;\n}\n}\npackage com.example.demo.util;\nimport com.nimbusds.jose.*;\nimport com.nimbusds.jose.crypto.MACSigner;\nimport com.nimbusds.jose.crypto.MACVerifier;\nimport com.nimbusds.jwt.JWTClaimsSet;\nimport com.nimbusds.jwt.SignedJWT;\nimport org.springframework.beans.factory.annotation.Value;\nimport org.springframework.security.core.userdetails.UserDetails;\nimport org.springframework.stereotype.Component;\nimport java.text.ParseException;\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\nimport java.util.Locale;\nimport java.util.Map;\n@Component\npublic class JoseJwtClaimGeneratorUtil {\n@Value(\"${jwt.company-secret-key}\")\nprivate String companySecretKey;\n\/\/retrieve employeeName from jwt token\npublic String getUsernameFromToken(String token) throws ParseException, JOSEException {\nreturn getTokenKeyValueForClaims(token).get(\"sub\").toString();\n}\nprivate Map getTokenKeyValueForClaims(String token) throws ParseException, JOSEException {\nMap claims;\ntry {\nJWSVerifier verifier = new MACVerifier(companySecretKey);\nSignedJWT signedJWT = SignedJWT.parse(token);\nsignedJWT.verify(verifier);\nclaims = signedJWT.getJWTClaimsSet().getClaims();\n} catch (ParseException e) {\nthrow new ParseException(\"Payload of JWS object is not a valid JSON object\", e.getErrorOffset());\n} catch (JOSEException e) {\nthrow new JOSEException(\"JOSE exception for token: \", e.getCause());\n}\nreturn claims;\n}\npublic String generateJwtToken(UserDetails userDetails) throws Exception {\ntry {\nJWSSigner signer = new MACSigner(companySecretKey);\nJWTClaimsSet claimsSet = new JWTClaimsSet.Builder()\n.subject(userDetails.getUsername())\n.issuer(\"your issuer\")\/\/ On our case it is IBM thingy\n.expirationTime(new Date(System.currentTimeMillis() + 60 * 1000)) \/\/Expire in a minute\n.audience(\"demo\")\n.build();\nSignedJWT signedJWT = new SignedJWT(new JWSHeader(JWSAlgorithm.HS256), claimsSet);\nsignedJWT.sign(signer);\nreturn signedJWT.serialize();\n} catch (Exception e) {\nthrow new Exception(\"JWT Signing has failed: \", e.getCause());\n}\n}\npublic Boolean validateTokenTimestamp(String token, UserDetails userDetails) throws ParseException, JOSEException {\nSimpleDateFormat formatter = new SimpleDateFormat(\"E MMM dd HH:mm:ss Z yyyy\", Locale.ENGLISH);\nfinal Date expiration = formatter.parse(getTokenKeyValueForClaims(token).get(\"exp\").toString());\nboolean hasExpired = expiration.before(new Date());\nfinal String username = getUsernameFromToken(token);\nreturn (username.equals(userDetails.getUsername()) &amp;&amp; !hasExpired);\n}\n}\npackage com.example.demo;\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\n@SpringBootApplication\npublic class NimbusJoseJwtApplication {\npublic static void main(String[] args) {\nSpringApplication.run(NimbusJoseJwtApplication.class, args);\n}\n}<\/code><\/pre>\n\n\n\n<p>If you need to decode, verify and generate JWT. I found this website very helpful. <a href=\"https:\/\/jwt.io\/\">https:\/\/jwt.io\/<\/a><br>Enjoy coding and learning<\/p>\n","protected":false},"excerpt":{"rendered":"<p>JSON Web Token (JWT) is an open standard that defines a compact and self-contained way for securely transmitting information between parties as a JSON object.JWT is easy to identify and is separated by dots .Example Format : iiiiiiiiiiiiii.jjjjjjjjjjjj.kkkkkkkHeader = iiiiiiiiiiiiPayload = jjjjjjjjjjjSignature = kkkkkkkBrief use of JSON Web Tokens : Authorization and Information Exchange.Java Library: [&hellip;]<\/p>\n","protected":false},"author":1,"featured_media":110,"comment_status":"open","ping_status":"closed","sticky":false,"template":"","format":"standard","meta":{"_coblocks_attr":"","_coblocks_dimensions":"","_coblocks_responsive_height":"","_coblocks_accordion_ie_support":"","footnotes":""},"categories":[],"tags":[],"class_list":["post-109","post","type-post","status-publish","format-standard","has-post-thumbnail","hentry"],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v23.9 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>How to use Nimbus JOSE along with JWT in Spring framework ? - JAVAPAN - Unlock Your Brilliance, Share Your Knowledge! \ud83d\ude80 Post Your Articles For Free.<\/title>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/javapan.com\/how-to-use-nimbus-jose-along-with-jwt-in-spring-framework\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"How to use Nimbus JOSE along with JWT in Spring framework ? - JAVAPAN - Unlock Your Brilliance, Share Your Knowledge! \ud83d\ude80 Post Your Articles For Free.\" \/>\n<meta property=\"og:description\" content=\"JSON Web Token (JWT) is an open standard that defines a compact and self-contained way for securely transmitting information between parties as a JSON object.JWT is easy to identify and is separated by dots .Example Format : iiiiiiiiiiiiii.jjjjjjjjjjjj.kkkkkkkHeader = iiiiiiiiiiiiPayload = jjjjjjjjjjjSignature = kkkkkkkBrief use of JSON Web Tokens : Authorization and Information Exchange.Java Library: [&hellip;]\" \/>\n<meta property=\"og:url\" content=\"https:\/\/javapan.com\/how-to-use-nimbus-jose-along-with-jwt-in-spring-framework\/\" \/>\n<meta property=\"og:site_name\" content=\"JAVAPAN - Unlock Your Brilliance, Share Your Knowledge! \ud83d\ude80 Post Your Articles For Free.\" \/>\n<meta property=\"article:published_time\" content=\"2023-06-15T14:03:22+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2024-02-10T16:33:32+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/javapan.com\/wp-content\/uploads\/2023\/06\/Screenshot-2023-06-15-100305sx.png\" \/>\n\t<meta property=\"og:image:width\" content=\"352\" \/>\n\t<meta property=\"og:image:height\" content=\"88\" \/>\n\t<meta property=\"og:image:type\" content=\"image\/png\" \/>\n<meta name=\"author\" content=\"Bishow Pandey\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"Bishow Pandey\" \/>\n\t<meta name=\"twitter:label2\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"2 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/javapan.com\/how-to-use-nimbus-jose-along-with-jwt-in-spring-framework\/\",\"url\":\"https:\/\/javapan.com\/how-to-use-nimbus-jose-along-with-jwt-in-spring-framework\/\",\"name\":\"How to use Nimbus JOSE along with JWT in Spring framework ? - JAVAPAN - Unlock Your Brilliance, Share Your Knowledge! \ud83d\ude80 Post Your Articles For Free.\",\"isPartOf\":{\"@id\":\"https:\/\/javapan.com\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/javapan.com\/how-to-use-nimbus-jose-along-with-jwt-in-spring-framework\/#primaryimage\"},\"image\":{\"@id\":\"https:\/\/javapan.com\/how-to-use-nimbus-jose-along-with-jwt-in-spring-framework\/#primaryimage\"},\"thumbnailUrl\":\"https:\/\/javapan.com\/wp-content\/uploads\/2023\/06\/Screenshot-2023-06-15-100305sx.png\",\"datePublished\":\"2023-06-15T14:03:22+00:00\",\"dateModified\":\"2024-02-10T16:33:32+00:00\",\"author\":{\"@id\":\"https:\/\/javapan.com\/#\/schema\/person\/a77752ba68fc33df883be2ffb8e8285a\"},\"breadcrumb\":{\"@id\":\"https:\/\/javapan.com\/how-to-use-nimbus-jose-along-with-jwt-in-spring-framework\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/javapan.com\/how-to-use-nimbus-jose-along-with-jwt-in-spring-framework\/\"]}]},{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/javapan.com\/how-to-use-nimbus-jose-along-with-jwt-in-spring-framework\/#primaryimage\",\"url\":\"https:\/\/javapan.com\/wp-content\/uploads\/2023\/06\/Screenshot-2023-06-15-100305sx.png\",\"contentUrl\":\"https:\/\/javapan.com\/wp-content\/uploads\/2023\/06\/Screenshot-2023-06-15-100305sx.png\",\"width\":352,\"height\":88},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/javapan.com\/how-to-use-nimbus-jose-along-with-jwt-in-spring-framework\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/javapan.com\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"How to use Nimbus JOSE along with JWT in Spring framework ?\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/javapan.com\/#website\",\"url\":\"https:\/\/javapan.com\/\",\"name\":\"JAVAPAN - Unlock Your Brilliance, Share Your Knowledge! \ud83d\ude80 Post Your Articles For Free.\",\"description\":\"Solving Technology Challenges\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/javapan.com\/?s={search_term_string}\"},\"query-input\":{\"@type\":\"PropertyValueSpecification\",\"valueRequired\":true,\"valueName\":\"search_term_string\"}}],\"inLanguage\":\"en-US\"},{\"@type\":\"Person\",\"@id\":\"https:\/\/javapan.com\/#\/schema\/person\/a77752ba68fc33df883be2ffb8e8285a\",\"name\":\"Bishow Pandey\",\"image\":{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/javapan.com\/#\/schema\/person\/image\/\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/2ee0db8821f0777e76adf2f4d0c20bb1?s=96&d=wavatar&r=g\",\"contentUrl\":\"https:\/\/secure.gravatar.com\/avatar\/2ee0db8821f0777e76adf2f4d0c20bb1?s=96&d=wavatar&r=g\",\"caption\":\"Bishow Pandey\"},\"sameAs\":[\"https:\/\/javapan.com\"],\"url\":\"https:\/\/javapan.com\/author\/bishowpratap7\/\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"How to use Nimbus JOSE along with JWT in Spring framework ? - JAVAPAN - Unlock Your Brilliance, Share Your Knowledge! \ud83d\ude80 Post Your Articles For Free.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/javapan.com\/how-to-use-nimbus-jose-along-with-jwt-in-spring-framework\/","og_locale":"en_US","og_type":"article","og_title":"How to use Nimbus JOSE along with JWT in Spring framework ? - JAVAPAN - Unlock Your Brilliance, Share Your Knowledge! \ud83d\ude80 Post Your Articles For Free.","og_description":"JSON Web Token (JWT) is an open standard that defines a compact and self-contained way for securely transmitting information between parties as a JSON object.JWT is easy to identify and is separated by dots .Example Format : iiiiiiiiiiiiii.jjjjjjjjjjjj.kkkkkkkHeader = iiiiiiiiiiiiPayload = jjjjjjjjjjjSignature = kkkkkkkBrief use of JSON Web Tokens : Authorization and Information Exchange.Java Library: [&hellip;]","og_url":"https:\/\/javapan.com\/how-to-use-nimbus-jose-along-with-jwt-in-spring-framework\/","og_site_name":"JAVAPAN - Unlock Your Brilliance, Share Your Knowledge! \ud83d\ude80 Post Your Articles For Free.","article_published_time":"2023-06-15T14:03:22+00:00","article_modified_time":"2024-02-10T16:33:32+00:00","og_image":[{"width":352,"height":88,"url":"https:\/\/javapan.com\/wp-content\/uploads\/2023\/06\/Screenshot-2023-06-15-100305sx.png","type":"image\/png"}],"author":"Bishow Pandey","twitter_card":"summary_large_image","twitter_misc":{"Written by":"Bishow Pandey","Est. reading time":"2 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/javapan.com\/how-to-use-nimbus-jose-along-with-jwt-in-spring-framework\/","url":"https:\/\/javapan.com\/how-to-use-nimbus-jose-along-with-jwt-in-spring-framework\/","name":"How to use Nimbus JOSE along with JWT in Spring framework ? - JAVAPAN - Unlock Your Brilliance, Share Your Knowledge! \ud83d\ude80 Post Your Articles For Free.","isPartOf":{"@id":"https:\/\/javapan.com\/#website"},"primaryImageOfPage":{"@id":"https:\/\/javapan.com\/how-to-use-nimbus-jose-along-with-jwt-in-spring-framework\/#primaryimage"},"image":{"@id":"https:\/\/javapan.com\/how-to-use-nimbus-jose-along-with-jwt-in-spring-framework\/#primaryimage"},"thumbnailUrl":"https:\/\/javapan.com\/wp-content\/uploads\/2023\/06\/Screenshot-2023-06-15-100305sx.png","datePublished":"2023-06-15T14:03:22+00:00","dateModified":"2024-02-10T16:33:32+00:00","author":{"@id":"https:\/\/javapan.com\/#\/schema\/person\/a77752ba68fc33df883be2ffb8e8285a"},"breadcrumb":{"@id":"https:\/\/javapan.com\/how-to-use-nimbus-jose-along-with-jwt-in-spring-framework\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/javapan.com\/how-to-use-nimbus-jose-along-with-jwt-in-spring-framework\/"]}]},{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/javapan.com\/how-to-use-nimbus-jose-along-with-jwt-in-spring-framework\/#primaryimage","url":"https:\/\/javapan.com\/wp-content\/uploads\/2023\/06\/Screenshot-2023-06-15-100305sx.png","contentUrl":"https:\/\/javapan.com\/wp-content\/uploads\/2023\/06\/Screenshot-2023-06-15-100305sx.png","width":352,"height":88},{"@type":"BreadcrumbList","@id":"https:\/\/javapan.com\/how-to-use-nimbus-jose-along-with-jwt-in-spring-framework\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/javapan.com\/"},{"@type":"ListItem","position":2,"name":"How to use Nimbus JOSE along with JWT in Spring framework ?"}]},{"@type":"WebSite","@id":"https:\/\/javapan.com\/#website","url":"https:\/\/javapan.com\/","name":"JAVAPAN - Unlock Your Brilliance, Share Your Knowledge! \ud83d\ude80 Post Your Articles For Free.","description":"Solving Technology Challenges","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/javapan.com\/?s={search_term_string}"},"query-input":{"@type":"PropertyValueSpecification","valueRequired":true,"valueName":"search_term_string"}}],"inLanguage":"en-US"},{"@type":"Person","@id":"https:\/\/javapan.com\/#\/schema\/person\/a77752ba68fc33df883be2ffb8e8285a","name":"Bishow Pandey","image":{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/javapan.com\/#\/schema\/person\/image\/","url":"https:\/\/secure.gravatar.com\/avatar\/2ee0db8821f0777e76adf2f4d0c20bb1?s=96&d=wavatar&r=g","contentUrl":"https:\/\/secure.gravatar.com\/avatar\/2ee0db8821f0777e76adf2f4d0c20bb1?s=96&d=wavatar&r=g","caption":"Bishow Pandey"},"sameAs":["https:\/\/javapan.com"],"url":"https:\/\/javapan.com\/author\/bishowpratap7\/"}]}},"_links":{"self":[{"href":"https:\/\/javapan.com\/wp-json\/wp\/v2\/posts\/109"}],"collection":[{"href":"https:\/\/javapan.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/javapan.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/javapan.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/javapan.com\/wp-json\/wp\/v2\/comments?post=109"}],"version-history":[{"count":6,"href":"https:\/\/javapan.com\/wp-json\/wp\/v2\/posts\/109\/revisions"}],"predecessor-version":[{"id":455,"href":"https:\/\/javapan.com\/wp-json\/wp\/v2\/posts\/109\/revisions\/455"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/javapan.com\/wp-json\/wp\/v2\/media\/110"}],"wp:attachment":[{"href":"https:\/\/javapan.com\/wp-json\/wp\/v2\/media?parent=109"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/javapan.com\/wp-json\/wp\/v2\/categories?post=109"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/javapan.com\/wp-json\/wp\/v2\/tags?post=109"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}